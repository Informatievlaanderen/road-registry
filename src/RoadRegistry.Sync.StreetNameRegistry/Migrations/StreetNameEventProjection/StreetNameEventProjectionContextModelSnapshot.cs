// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoadRegistry.Sync.StreetNameRegistry;

#nullable disable

namespace RoadRegistry.Sync.StreetNameRegistry.Migrations.StreetNameEventProjection
{
    [DbContext(typeof(StreetNameEventProjectionContext))]
    partial class StreetNameEventProjectionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.Runner.ProjectionStates.ProjectionStateItem", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DesiredState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DesiredStateChangedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.HasKey("Name");

                    b.ToTable("ProjectionStates", "RoadRegistryStreetNameEvent");
                });

            modelBuilder.Entity("RoadRegistry.Sync.StreetNameRegistry.Models.RenamedStreetNameRecord", b =>
                {
                    b.Property<int>("StreetNameLocalId")
                        .HasColumnType("int");

                    b.Property<int>("DestinationStreetNameLocalId")
                        .HasColumnType("int");

                    b.HasKey("StreetNameLocalId");

                    b.HasIndex("StreetNameLocalId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("StreetNameLocalId"), false);

                    b.ToTable("RenamedStreetName", "RoadRegistryStreetNameEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
