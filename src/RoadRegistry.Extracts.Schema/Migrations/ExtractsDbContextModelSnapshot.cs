// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using RoadRegistry.Extracts.Schema;

#nullable disable

namespace RoadRegistry.Extracts.Schema.Migrations
{
    [DbContext(typeof(ExtractsDbContext))]
    partial class ExtractsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RoadRegistry.Extracts.Schema.ExtractDownload", b =>
                {
                    b.Property<Guid>("DownloadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArchiveId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<Geometry>("Contour")
                        .IsRequired()
                        .HasColumnType("Geometry");

                    b.Property<bool>("DownloadAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DownloadedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("ExtractDownloadTimeoutOccurred")
                        .HasColumnType("bit");

                    b.Property<string>("ExtractRequestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsInformative")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("RequestedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DownloadId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("DownloadId"));

                    b.HasIndex("ExtractRequestId");

                    b.ToTable("ExtractDownloads", "RoadRegistryExtracts");
                });

            modelBuilder.Entity("RoadRegistry.Extracts.Schema.ExtractRequest", b =>
                {
                    b.Property<string>("ExtractRequestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CurrentDownloadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalRequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("RequestedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ExtractRequestId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("ExtractRequestId"));

                    b.HasIndex("CurrentDownloadId");

                    b.ToTable("ExtractRequests", "RoadRegistryExtracts");
                });
#pragma warning restore 612, 618
        }
    }
}
