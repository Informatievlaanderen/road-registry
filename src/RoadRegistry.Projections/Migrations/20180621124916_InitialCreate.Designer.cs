// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RoadRegistry.Projections;
using System;

namespace RoadRegistry.Projections.Migrations
{
    [DbContext(typeof(ShapeContext))]
    [Migration("20180621124916_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aiv.Vbr.ProjectionHandling.Runner.ProjectionStates.ProjectionStateItem", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Position");

                    b.HasKey("Name")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("ProjectionStates","RoadRegistryOslo");
                });

            modelBuilder.Entity("RoadRegistry.Projections.RoadNodeRecord", b =>
                {
                    b.Property<int>("Id");

                    b.Property<byte[]>("DbaseRecord");

                    b.Property<byte[]>("ShapeRecordContent");

                    b.Property<int>("ShapeRecordContentLength");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("RoadNode","RoadRegistryShape");
                });

            modelBuilder.Entity("RoadRegistry.Projections.RoadReferencePointRecord", b =>
                {
                    b.Property<int>("Id");

                    b.Property<byte[]>("DbaseRecord");

                    b.Property<byte[]>("ShapeRecordContent");

                    b.Property<int>("ShapeRecordContentLength");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("RoadReferencePoint","RoadRegistryShape");
                });

            modelBuilder.Entity("RoadRegistry.Projections.RoadSegmentDynamicHardeningAttributeRecord", b =>
                {
                    b.Property<int>("Id");

                    b.Property<byte[]>("DbaseRecord");

                    b.Property<int>("RoadSegmentId");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("RoadSegmentHardeningAttribute","RoadRegistryShape");
                });

            modelBuilder.Entity("RoadRegistry.Projections.RoadSegmentDynamicLaneAttributeRecord", b =>
                {
                    b.Property<int>("Id");

                    b.Property<byte[]>("DbaseRecord");

                    b.Property<int>("RoadSegmentId");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("RoadSegmentLaneAttribute","RoadRegistryShape");
                });

            modelBuilder.Entity("RoadRegistry.Projections.RoadSegmentDynamicWidthAttributeRecord", b =>
                {
                    b.Property<int>("Id");

                    b.Property<byte[]>("DbaseRecord");

                    b.Property<int>("RoadSegmentId");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("RoadSegmentWidthAttribute","RoadRegistryShape");
                });

            modelBuilder.Entity("RoadRegistry.Projections.RoadSegmentRecord", b =>
                {
                    b.Property<int>("Id");

                    b.Property<byte[]>("DbaseRecord");

                    b.Property<byte[]>("ShapeRecordContent");

                    b.Property<int>("ShapeRecordContentLength");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("RoadSegment","RoadRegistryShape");
                });
#pragma warning restore 612, 618
        }
    }
}
