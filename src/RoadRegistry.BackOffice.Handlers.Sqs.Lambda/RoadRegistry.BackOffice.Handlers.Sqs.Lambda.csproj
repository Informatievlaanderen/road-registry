<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\..\.build\Be.Vlaanderen.Basisregisters.Build.Pipeline\Content\Be.Vlaanderen.Basisregisters.Build.Pipeline.Settings.Library.props" />
  <PropertyGroup>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <AWSProjectType>Lambda</AWSProjectType>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <Platforms>AnyCPU;x64;x86</Platforms>
    <PublishReadyToRun>true</PublishReadyToRun>
    <RuntimeIdentifiers>linux-x64;linux-arm64</RuntimeIdentifiers>
    <NoWarn>CS8618;CS8602;CS8604;CS8619;CS8620;CS8629</NoWarn>
    <EnableDefaultContentItems>false</EnableDefaultContentItems>
    <ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
    <StripSymbols>true</StripSymbols>
    <DebugType>none</DebugType>
    <DebugSymbols>false</DebugSymbols>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\RoadRegistry.BackOffice.Abstractions\RoadRegistry.BackOffice.Abstractions.csproj" />
    <ProjectReference Include="..\RoadRegistry.BackOffice.Handlers.Sqs\RoadRegistry.BackOffice.Handlers.Sqs.csproj" />
    <ProjectReference Include="..\RoadRegistry.BackOffice.Handlers\RoadRegistry.BackOffice.Handlers.csproj" />
    <ProjectReference Include="..\RoadRegistry.BackOffice\RoadRegistry.BackOffice.csproj" />
    <ProjectReference Include="..\RoadRegistry.Hosts\RoadRegistry.Hosts.csproj" />
    <ProjectReference Include="..\RoadRegistry.StreetName\RoadRegistry.StreetName.csproj" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Be.Vlaanderen.Basisregisters.Api" />
    <PackageReference Include="Be.Vlaanderen.Basisregisters.Aws.DistributedMutex" />
    <PackageReference Include="Be.Vlaanderen.Basisregisters.Aws.Lambda" />
    <PackageReference Include="Be.Vlaanderen.Basisregisters.CommandHandling.Idempotency" />
    <PackageReference Include="Be.Vlaanderen.Basisregisters.GrAr.Provenance" />
    <PackageReference Include="Be.Vlaanderen.Basisregisters.ProjectionHandling.SqlStreamStore.Autofac" />
    <PackageReference Include="Amazon.Lambda.Serialization.Json" />
    <PackageReference Include="Autofac.Extensions.DependencyInjection" />
    <PackageReference Include="AWSSDK.Core" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" />
    <PackageReference Include="Serilog.Sinks.Slack" />
  </ItemGroup>
  <ItemGroup>
		<Using Include="Amazon.Lambda.Core" />
		<Using Include="Amazon.Lambda.Serialization.Json" />
	</ItemGroup>
  <ItemGroup>
    <Content Include="..\..\.dockerignore">
      <Link>.dockerignore</Link>
      <DependentUpon>Dockerfile</DependentUpon>
    </Content>
    <Content Include="appsettings.json" CopyToOutputDirectory="Always" />
    <Content Include="appsettings.*.json" CopyToOutputDirectory="Always" />
  </ItemGroup>
  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <_Parameter1>$(AssemblyName).Tests</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>
</Project>
