CREATE OR REPLACE STREAM IF NOT EXISTS ROAD_ROADSEGMENT_SNAPSHOT_STREAM_FLATTEN_INTEGRATIONDB
WITH (KAFKA_TOPIC='road.roadsegment.snapshot.stream.flatten.integrationdb', PARTITIONS=1, VALUE_FORMAT='JSON_SR', KEY_FORMAT='JSON_SR')
AS SELECT
	data->id as "Id",
	data->version as "Version",
	data->accessRestrictionDutchName as "AccessRestrictionDutchName",
	data->accessRestrictionId as "AccessRestrictionId",
	data->beginRoadNodeId as "BeginRoadNodeId",
	data->categoryDutchName as "CategoryDutchName",
	data->categoryId as "CategoryId",
	data->endRoadNodeId as "EndRoadNodeId",
	--"GeometryAsHex" (column is computed using GIST),
	data->geometryAsWkt as "GeometryAsWkt",
	data->geometrySrid as "GeometrySrid",
	data->geometryVersion as "GeometryVersion",
	data->leftSideMunicipalityId as "LeftSideMunicipalityId",
	data->leftSideMunicipalityNisCode as "LeftSideMunicipalityNisCode",
	data->leftSideStreetName as "LeftSideStreetName",
	data->leftSideStreetNameId as "LeftSideStreetNameId",
	data->maintainerId as "MaintainerId",
	data->maintainerName as "MaintainerName",
	data->methodDutchName as "MethodDutchName",
	data->methodId as "MethodId",
	data->morphologyDutchName as "MorphologyDutchName",
	data->morphologyId as "MorphologyId",
	data->recordingDate as "RecordingDate",
	data->rightSideMunicipalityId as "RightSideMunicipalityId",
	data->rightSideMunicipalityNisCode as "RightSideMunicipalityNisCode",
	data->rightSideStreetName as "RightSideStreetName",
	data->rightSideStreetNameId as "RightSideStreetNameId",
	data->roadSegmentVersion as "RoadSegmentVersion",
	data->statusDutchName as "StatusDutchName",
	data->statusId as "StatusId",
	data->streetNameCachePosition as "StreetNameCachePosition",
	data->transactionId as "TransactionId",
	PARSE_TIMESTAMP(data->origin->`timestamp`, 'yyyy-MM-dd''T''HH:mm:ssXXX', 'UTC') as "Timestamp",
	data->origin->organization as "Organization",
	PARSE_TIMESTAMP(data->lastChangedTimestamp, 'yyyy-MM-dd''T''HH:mm:ssXXX', 'UTC') as "LastChangedTimestamp",
	data->isRemoved as "Removed"
FROM ROAD_ROADSEGMENT_SNAPSHOT_STREAM
PARTITION BY data->id;